{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","str","setStr","result","setResult","resultLength","setResultLength","className","onSubmit","e","preventDefault","crypto","randomBytes","toString","generatePass","length","id","value","onChange","target","placeholder","type","onClick","navigator","clipboard","writeText","then","tmp","setTimeout","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kaA0DeA,MAvDf,WAAgB,IAAD,EAESC,IAAMC,SAAS,IAFxB,mBAENC,EAFM,KAEDC,EAFC,OAGeH,IAAMC,SAAS,IAH9B,mBAGNG,EAHM,KAGEC,EAHF,OAI2BL,IAAMC,SAAS,GAJ1C,mBAINK,EAJM,KAIQC,EAJR,KAuCb,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,qCACA,uBAAMA,UAAU,OAAOC,SA/B3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMP,EAoBR,SAAsBF,GACpB,OAAOU,IAAOC,YAAYX,GAAKY,SAAS,OArBzBC,EAAcb,GAE7BG,EAAUD,GACVG,EAAgBH,EAAOY,SAyBrB,UACE,uBAAOR,UAAU,QAAQS,GAAG,QAAQC,MAAOhB,EAAKiB,SArCtD,SAAsBT,GACjBA,EAAEU,OAAOF,OAAS,GAAKR,EAAEU,OAAOF,OAAS,IAC5Cf,EAAOO,EAAEU,OAAOF,QAmC4DG,YAAY,wBACpF,wBAAQb,UAAU,gBAAgBc,KAAK,SAAvC,kCAEF,sBAAKd,UAAU,iBAAf,UACE,mBAAGA,UAAU,SAAb,SAAuBJ,IACvB,wBAAQI,UAAU,cAAce,QA5BtC,SAAoBb,GAClBc,UAAUC,UAAUC,UAAUtB,GAC3BuB,MAAK,WACJ,IAAMC,EAAMxB,EACZC,EAAU,uEACVwB,YAAW,WACTxB,EAAUuB,KACT,QAEJE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAkBZ,qBAEF,oBAAGvB,UAAU,gBAAb,qBAAsCF,SCzC7B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68adf3b5.chunk.js","sourcesContent":["import React from \"react\";\nimport crypto from 'crypto';\n\nfunction App() {\n\n  const [str, setStr] = React.useState(16);\n  const [result, setResult] = React.useState('');\n  const [resultLength, setResultLength] = React.useState(0);\n\n  function handleChange(e) {\n    if(e.target.value >= 0 && e.target.value <= 32)\n    setStr(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const result = generatePass(+str);\n\n    setResult(result);\n    setResultLength(result.length);\n  }\n\n  function handleCopy(e) {\n    navigator.clipboard.writeText(result)\n      .then(() => {\n        const tmp = result;\n        setResult('Скопировано!');\n        setTimeout(() => {\n          setResult(tmp);\n        }, 500)\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  function generatePass(str) {\n    return crypto.randomBytes(str).toString('hex');\n  }\n\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"heading\">Generate your password!</h1>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input className=\"input\" id=\"input\" value={str} onChange={handleChange} placeholder=\"Nubmer from 0 to 32\" />\n        <button className=\"submit-button\" type=\"submit\">Generate Password</button>\n      </form>\n      <div className=\"result-wrapper\">\n        <p className=\"result\">{result}</p>\n        <button className=\"copy-button\" onClick={handleCopy}>Copy</button>\n      </div>\n      <p className=\"result-length\">Length: {resultLength}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}