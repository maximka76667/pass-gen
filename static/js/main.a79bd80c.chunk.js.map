{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","str","setStr","result","setResult","className","onSubmit","e","preventDefault","array","split","i","length","t","map","l","charCodeAt","toString","filter","join","generatePass","id","value","onChange","target","placeholder","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KA2CeA,MAzCf,WAAgB,IAAD,EAESC,IAAMC,SAAS,IAFxB,mBAENC,EAFM,KAEDC,EAFC,OAGeH,IAAMC,SAAS,IAH9B,mBAGNG,EAHM,KAGEC,EAHF,KA2Bb,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,qCACA,uBAAMA,UAAU,OAAOC,SArB3B,SAAsBC,GACpBA,EAAEC,iBAEFJ,EAGF,SAAsBH,GAGpB,IAFA,IAAIQ,EAAQR,EAAIS,MAAM,IAEbC,EAAIF,EAAMG,OAAO,EAAGD,EAAI,EAAGA,IAClC,GAAGA,EAAI,IAAM,EAAG,CACd,IAAIE,EAAIJ,EAAME,EAAE,GAAIF,EAAME,EAAE,GAAKF,EAAME,GAAIF,EAAME,GAAKE,EAG1D,OAAOJ,EAAMK,KAAI,SAACC,GAAD,OAAOA,EAAEC,WAAW,GAAGC,SAAS,OAAKC,QAAO,SAACH,EAAGJ,GAAJ,OAAWA,EAAI,GAAK,IAAM,KAAGQ,KAAK,IAXrFC,CAAanB,KAkBrB,UACE,uBAAOI,UAAU,QAAQgB,GAAG,QAAQC,MAAOrB,EAAKsB,SA1BtD,SAAsBhB,GACpBL,EAAOK,EAAEiB,OAAOF,QAyB4DG,YAAY,iBACpF,oBAAGpB,UAAU,MAAb,qBAA4BJ,EAAIW,UAChC,wBAAQP,UAAU,gBAAgBqB,KAAK,SAAvC,kCAEF,mBAAGrB,UAAU,SAAb,SAAuBF,IACvB,oBAAGE,UAAU,SAAb,qBAA+BF,EAAOS,cC1B7Be,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a79bd80c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction App() {\n\n  const [str, setStr] = React.useState('');\n  const [result, setResult] = React.useState('');\n\n  function handleChange(e) {\n    setStr(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setResult(generatePass(str));\n  }\n\n  function generatePass(str) {\n    let array = str.split('');\n\n    for (let i = array.length-1; i > 0; i--) {\n      if(i % 2 === 0) {\n        let t = array[i-1]; array[i-1] = array[i]; array[i] = t\n      }\n    }\n    return array.map((l) => l.charCodeAt(0).toString(16)).filter((l, i) => (i + 1) % 2 === 0).join('');\n  }\n\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"heading\">Generate your password!</h1>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input className=\"input\" id=\"input\" value={str} onChange={handleChange} placeholder=\"Input Stroke\" />\n        <p className=\"str\">Length: {str.length}</p>\n        <button className=\"submit-button\" type=\"submit\">Generate Password</button>\n      </form>\n      <p className=\"result\">{result}</p>\n      <p className=\"result\">Length: {result.length}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}