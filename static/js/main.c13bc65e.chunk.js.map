{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","str","setStr","result","setResult","resultLength","setResultLength","className","style","onSubmit","e","preventDefault","crypto","randomBytes","toString","generatePass","length","id","value","onChange","target","placeholder","type","disabled","onClick","navigator","clipboard","writeText","then","tmp","setTimeout","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kfAqEeA,MAlEf,WAEE,MAAsBC,IAAMC,SAAS,MAArC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BH,IAAMC,SAAS,IAA3C,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCL,IAAMC,SAAS,GAAvD,mBAAOK,EAAP,KAAqBC,EAArB,KAoCA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAMC,MAAO,CAAC,MAAO,KACrB,sBAAMA,MAAO,CAAC,MAAO,KACrB,sBAAMA,MAAO,CAAC,MAAO,KACrB,sBAAMA,MAAO,CAAC,MAAO,KACrB,uBAAMD,UAAU,UAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,UAAd,qCACA,uBAAMA,UAAU,OAAOE,SAtC/B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMR,EAsBR,SAAsBF,GACpB,OAAOW,IAAOC,YAAYZ,EAAM,GAAGa,SAAS,OAvB7BC,EAAcd,GAE7BG,EAAUD,GACVG,EAAgBH,EAAOa,SAgCjB,UACE,uBAAOT,UAAU,QAAQU,GAAG,QAAQC,MAAOjB,EAAKkB,SA5C1D,SAAsBT,GACjBA,EAAEU,OAAOF,OAAS,GAAKR,EAAEU,OAAOF,OAAS,IAC5ChB,EAAOQ,EAAEU,OAAOF,QA0CgEG,YAAY,wBACpF,wBAAQd,UAAU,gBAAgBe,KAAK,SAASC,UAAatB,EAA7D,qCAGJ,sBAAKM,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,mBAAGA,UAAU,SAAb,SAAuBJ,IACvB,wBAAQI,UAAU,cAAciB,QArC1C,SAAoBd,GACfP,GACDsB,UAAUC,UAAUC,UAAUxB,GAC3ByB,MAAK,WACJ,IAAMC,EAAM1B,EACZC,EAAU,WACV0B,YAAW,WACT1B,EAAUyB,KACT,QAEJE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OA0B2CT,UAAapB,EAAlE,qBAEF,oBAAGI,UAAU,gBAAb,qBAAsCF,eClDjC8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c13bc65e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport crypto from 'crypto';\r\n\r\nfunction App() {\r\n\r\n  const [str, setStr] = React.useState('16');\r\n  const [result, setResult] = React.useState('');\r\n  const [resultLength, setResultLength] = React.useState(0);\r\n\r\n  function handleChange(e) {\r\n    if(e.target.value >= 0 && e.target.value <= 64)\r\n    setStr(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const result = generatePass(+str);\r\n\r\n    setResult(result);\r\n    setResultLength(result.length);\r\n  }\r\n\r\n  function handleCopy(e) {\r\n    if(result) {\r\n      navigator.clipboard.writeText(result)\r\n        .then(() => {\r\n          const tmp = result;\r\n          setResult('Copied!');\r\n          setTimeout(() => {\r\n            setResult(tmp);\r\n          }, 500)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  function generatePass(str) {\r\n    return crypto.randomBytes(str / 2).toString('hex');\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <span style={{\"--i\": 0}}></span>\r\n      <span style={{\"--i\": 1}}></span>\r\n      <span style={{\"--i\": 2}}></span>\r\n      <span style={{\"--i\": 3}}></span>\r\n      <main className=\"content\">\r\n        <div className=\"glass\">\r\n          <h1 className=\"heading\">Generate your password!</h1>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <input className=\"input\" id=\"input\" value={str} onChange={handleChange} placeholder=\"Number from 0 to 64\" />\r\n            <button className=\"submit-button\" type=\"submit\" disabled = { str ? false : true } >Generate Password</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"glass\">\r\n          <div className=\"result-wrapper\">\r\n            <p className=\"result\">{result}</p>\r\n            <button className=\"copy-button\" onClick={handleCopy} disabled = { result ? false : true }>Copy</button>\r\n          </div>\r\n          <p className=\"result-length\">Length: {resultLength}</p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.sass';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}